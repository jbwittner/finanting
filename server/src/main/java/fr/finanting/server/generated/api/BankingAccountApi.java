/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.finanting.server.generated.api;

import fr.finanting.server.generated.model.BankingAccountDTO;
import fr.finanting.server.generated.model.BankingAccountParameter;
import fr.finanting.server.generated.model.UpdateBankingAccountParameter;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-24T23:16:07.038043+02:00[Europe/Paris]")
@Validated
@Api(value = "bankingAccount", description = "the bankingAccount API")
public interface BankingAccountApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PUT /bankingAccount : aaaaaaaaaaaaa
     *
     * @param bankingAccountParameter aaaaaaaaaaaaa (optional)
     * @return successful operation (status code 201)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "createBankingAccount", notes = "", response = BankingAccountDTO.class, tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "successful operation", response = BankingAccountDTO.class) })
    @PutMapping(
        value = "/bankingAccount",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<BankingAccountDTO> createBankingAccount(@ApiParam(value = "aaaaaaaaaaaaa"  )  @Valid @RequestBody(required = false) BankingAccountParameter bankingAccountParameter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 6.027456183070403, \"addressDTO\" : { \"zipCode\" : \"zipCode\", \"address\" : \"address\", \"city\" : \"city\", \"street\" : \"street\" }, \"currencyDTO\" : { \"symbol\" : \"symbol\", \"decimalPlaces\" : 1, \"isoCode\" : \"isoCode\", \"rate\" : 6, \"defaultCurrency\" : true, \"id\" : 0, \"label\" : \"label\" }, \"bankDetailsDTO\" : { \"iban\" : \"iban\", \"bankName\" : \"bankName\", \"accountNumber\" : \"accountNumber\" }, \"id\" : 0, \"label\" : \"label\", \"abbreviation\" : \"abbreviation\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /bankingAccount/{bankingAccountId} : aaaaaaaaaaaaa
     *
     * @param bankingAccountId aaaaaaaaaaaaa (required)
     * @return aaaaaaaaaaaaa (status code 200)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "deleteBankingAccount", notes = "", tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "aaaaaaaaaaaaa") })
    @DeleteMapping(
        value = "/bankingAccount/{bankingAccountId}"
    )
    default ResponseEntity<Void> deleteBankingAccount(@ApiParam(value = "aaaaaaaaaaaaa",required=true) @PathVariable("bankingAccountId") Integer bankingAccountId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /bankingAccount/{bankingAccountId} : aaaaaaaaaaaaa
     *
     * @param bankingAccountId aaaaaaaaaaaaa (required)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "getBankingAccount", notes = "", response = BankingAccountDTO.class, tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankingAccountDTO.class) })
    @GetMapping(
        value = "/bankingAccount/{bankingAccountId}",
        produces = { "application/json" }
    )
    default ResponseEntity<BankingAccountDTO> getBankingAccount(@ApiParam(value = "aaaaaaaaaaaaa",required=true) @PathVariable("bankingAccountId") Integer bankingAccountId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 6.027456183070403, \"addressDTO\" : { \"zipCode\" : \"zipCode\", \"address\" : \"address\", \"city\" : \"city\", \"street\" : \"street\" }, \"currencyDTO\" : { \"symbol\" : \"symbol\", \"decimalPlaces\" : 1, \"isoCode\" : \"isoCode\", \"rate\" : 6, \"defaultCurrency\" : true, \"id\" : 0, \"label\" : \"label\" }, \"bankDetailsDTO\" : { \"iban\" : \"iban\", \"bankName\" : \"bankName\", \"accountNumber\" : \"accountNumber\" }, \"id\" : 0, \"label\" : \"label\", \"abbreviation\" : \"abbreviation\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /bankingAccount/{groupId} : aaaaaaaaaaaaa
     *
     * @param groupId aaaaaaaaaaaaa (required)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "getGroupBankingAccounts", notes = "", response = BankingAccountDTO.class, responseContainer = "List", tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankingAccountDTO.class, responseContainer = "List") })
    @GetMapping(
        value = "/bankingAccount/{groupId}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<BankingAccountDTO>> getGroupBankingAccounts(@ApiParam(value = "aaaaaaaaaaaaa",required=true) @PathVariable("groupId") Integer groupId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 6.027456183070403, \"addressDTO\" : { \"zipCode\" : \"zipCode\", \"address\" : \"address\", \"city\" : \"city\", \"street\" : \"street\" }, \"currencyDTO\" : { \"symbol\" : \"symbol\", \"decimalPlaces\" : 1, \"isoCode\" : \"isoCode\", \"rate\" : 6, \"defaultCurrency\" : true, \"id\" : 0, \"label\" : \"label\" }, \"bankDetailsDTO\" : { \"iban\" : \"iban\", \"bankName\" : \"bankName\", \"accountNumber\" : \"accountNumber\" }, \"id\" : 0, \"label\" : \"label\", \"abbreviation\" : \"abbreviation\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /bankingAccount : aaaaaaaaaaaaa
     *
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "getUserBankingAccounts", notes = "", response = BankingAccountDTO.class, responseContainer = "List", tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankingAccountDTO.class, responseContainer = "List") })
    @GetMapping(
        value = "/bankingAccount",
        produces = { "application/json" }
    )
    default ResponseEntity<List<BankingAccountDTO>> getUserBankingAccounts() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 6.027456183070403, \"addressDTO\" : { \"zipCode\" : \"zipCode\", \"address\" : \"address\", \"city\" : \"city\", \"street\" : \"street\" }, \"currencyDTO\" : { \"symbol\" : \"symbol\", \"decimalPlaces\" : 1, \"isoCode\" : \"isoCode\", \"rate\" : 6, \"defaultCurrency\" : true, \"id\" : 0, \"label\" : \"label\" }, \"bankDetailsDTO\" : { \"iban\" : \"iban\", \"bankName\" : \"bankName\", \"accountNumber\" : \"accountNumber\" }, \"id\" : 0, \"label\" : \"label\", \"abbreviation\" : \"abbreviation\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /bankingAccount/{bankingAccountId} : aaaaaaaaaaaaa
     *
     * @param bankingAccountId aaaaaaaaaaaaa (required)
     * @param updateBankingAccountParameter aaaaaaaaaaaaa (optional)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "aaaaaaaaaaaaa", nickname = "updateBankingAccount", notes = "", response = BankingAccountDTO.class, tags={ "bankingAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankingAccountDTO.class) })
    @PostMapping(
        value = "/bankingAccount/{bankingAccountId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<BankingAccountDTO> updateBankingAccount(@ApiParam(value = "aaaaaaaaaaaaa",required=true) @PathVariable("bankingAccountId") Integer bankingAccountId,@ApiParam(value = "aaaaaaaaaaaaa"  )  @Valid @RequestBody(required = false) UpdateBankingAccountParameter updateBankingAccountParameter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 6.027456183070403, \"addressDTO\" : { \"zipCode\" : \"zipCode\", \"address\" : \"address\", \"city\" : \"city\", \"street\" : \"street\" }, \"currencyDTO\" : { \"symbol\" : \"symbol\", \"decimalPlaces\" : 1, \"isoCode\" : \"isoCode\", \"rate\" : 6, \"defaultCurrency\" : true, \"id\" : 0, \"label\" : \"label\" }, \"bankDetailsDTO\" : { \"iban\" : \"iban\", \"bankName\" : \"bankName\", \"accountNumber\" : \"accountNumber\" }, \"id\" : 0, \"label\" : \"label\", \"abbreviation\" : \"abbreviation\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
